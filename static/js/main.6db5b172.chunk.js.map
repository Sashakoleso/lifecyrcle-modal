{"version":3,"sources":["components/Modal/Modal.js","components/App.js","index.js","components/Modal/Modal.module.css"],"names":["Modal","handleKeyPress","e","keyCode","props","onClose","handleBackdropClick","target","currentTarget","window","addEventListener","this","removeEventListener","children","className","styles","backdrop","onClick","role","modal","Component","App","state","isModalOpen","openModal","setState","closeModal","type","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qNAIqBA,E,2MAgBnBC,eAAiB,SAAAC,GAKG,KAAdA,EAAEC,SAQN,EAAKC,MAAMC,W,EAGbC,oBAAsB,SAAAJ,GAGhBA,EAAEK,SAAWL,EAAEM,eAInB,EAAKJ,MAAMC,W,mFA/BXI,OAAOC,iBAAiB,UAAWC,KAAKV,kB,6CAKxCQ,OAAOG,oBAAoB,UAAWD,KAAKV,kB,+BA6BnC,IACAY,EAAaF,KAAKP,MAAlBS,SAER,OACE,yBACEC,UAAWC,IAAOC,SAClBC,QAASN,KAAKL,oBACdY,KAAK,gBAEL,yBAAKJ,UAAWC,IAAOI,OAAQN,Q,GAnDJO,aCuCpBC,E,2MAvCbC,MAAQ,CACNC,aAAa,G,EAGfC,UAAY,kBAAM,EAAKC,SAAS,CAAEF,aAAa,K,EAE/CG,WAAa,kBAAM,EAAKD,SAAS,CAAEF,aAAa,K,wEAEtC,IACAA,EAAgBZ,KAAKW,MAArBC,YACR,OACE,yBAAKT,UAAU,OACb,4BAAQa,KAAK,SAASV,QAASN,KAAKa,WAApC,cAICD,GACC,kBAAC,EAAD,CAAOlB,QAASM,KAAKe,YACnB,6CACA,4iBAWA,4BAAQC,KAAK,SAASV,QAASN,KAAKe,YAApC,qB,GA/BMN,aCClBQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,SAAW,wBAAwB,MAAQ,uB","file":"static/js/main.6db5b172.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    // https://github.com/yannickcr/eslint-plugin-react/issues/7\n    children: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    // console.log('componentWillUnmount');\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleKeyPress = e => {\n    // console.log(e);\n    // console.log(e.code);\n    // console.log(e.keyCode);\n\n    if (e.keyCode !== 27) {\n      return;\n    }\n\n    // if (e.code !== 'Escape') {\n    //   return;\n    // }\n\n    this.props.onClose();\n  };\n\n  handleBackdropClick = e => {\n    // console.log(e.target);\n    // console.log(e.currentTarget);\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div\n        className={styles.backdrop}\n        onClick={this.handleBackdropClick}\n        role=\"presentation\"\n      >\n        <div className={styles.modal}>{children}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Modal from './Modal/Modal';\n\nclass App extends Component {\n  state = {\n    isModalOpen: false,\n  };\n\n  openModal = () => this.setState({ isModalOpen: true });\n\n  closeModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n    const { isModalOpen } = this.state;\n    return (\n      <div className=\"App\">\n        <button type=\"button\" onClick={this.openModal}>\n          Open Modal\n        </button>\n\n        {isModalOpen && (\n          <Modal onClose={this.closeModal}>\n            <h1>Modal Content</h1>\n            <p>\n              In user interface design for computer applications, a modal window\n              is a graphical control element subordinate to an application's\n              main window. It creates a mode that disables the main window but\n              keeps it visible, with the modal window as a child window in front\n              of it. Users must interact with the modal window before they can\n              return to the parent application. This avoids interrupting the\n              workflow on the main window. Modal windows are sometimes called\n              heavy windows or modal dialogs because they often display a dialog\n              box.\n            </p>\n            <button type=\"button\" onClick={this.closeModal}>\n              Close Modal\n            </button>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1HQtT\",\"modal\":\"Modal_modal__2KyUr\"};"],"sourceRoot":""}